dashboard.php bootstrap (mobile friendly) 

<?php
session_start();
if (!isset($_SESSION['username'])) {
    header("Location: welcome.php");
    exit();
}

$username = $_SESSION['username'];
$conn = new mysqli("localhost", "root", "", "coffin_db");
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$name = '';
$role = '';
$sql = "SELECT Name, Role FROM login_details WHERE username = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $username);
$stmt->execute();
$stmt->bind_result($name, $role);
$stmt->fetch();
$stmt->close();

$restrictedPages = ['database.php', 'credentials.php'];
$currentPage = basename($_SERVER['PHP_SELF']);
if ($role === 'Staff' && in_array($currentPage, $restrictedPages)) {
    echo "<script>alert('Access Denied: Admins only!'); window.location.href='dashboard.php';</script>";
    exit();
}

$dataSql = "SELECT * FROM coffins";
$result = $conn->query($dataSql);
$allCoffins = [];
while ($row = $result->fetch_assoc()) {
    $allCoffins[] = $row;
}
$result->free();

$counts = [
    'In-stock' => 0,
    'Sold' => 0,
    'Transfer' => 0,
    'Write-off' => 0,
    'Total' => count($allCoffins)
];

foreach ($allCoffins as $row) {
    $status = trim($row['status'] ?? '');
    if ($status === 'In-stock') {
        $counts['In-stock']++;
    } elseif ($status === 'Sold') {
        $counts['Sold']++;
    } elseif ($status === 'Write-off') {
        $counts['Write-off']++;
    }

    if (!empty($row['transfer_location']) && trim($row['transfer_location']) !== '') {
        $counts['Transfer']++;
    }
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Coffin Analytics Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- jQuery (you already have it) -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 30px;
            background-color: #330000;
            color: white;
        }
        h2 {
            margin-top: 80px;
            margin-bottom: 25px;
            text-align: center;
            font-weight: 700;
            font-size: 28px;
            color: #fff;
            text-shadow: 1px 1px 3px #660000;
        }
        .user-box {
            position: absolute;
            top: 20px;
            right: 30px;
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
        }
        .user-box img {
            width: 32px;
            height: 32px;
            border-radius: 50%;
        }
        .user-name {
            font-weight: bold;
        }
        .logout-menu {
            position: absolute;
            top: 60px;
            right: 30px;
            background-color: #660000;
            padding: 10px 15px;
            border-radius: 5px;
            display: none;
            cursor: pointer;
        }
        .logout-menu:hover {
            background-color: #990000;
        }
        .hamburger-container {
            position: absolute;
            top: 20px;
            left: 30px;
            font-size: 28px;
            color: white;
            cursor: pointer;
            z-index: 1000;
        }
        .hamburger-menu {
            position: absolute;
            top: 60px;
            left: 30px;
            background-color: #660000;
            padding: 10px 15px;
            border-radius: 8px;
            display: none;
            flex-direction: column;
            gap: 10px;
            z-index: 1000;
        }
        .hamburger-menu button {
            background-color: #880000;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            text-align: left;
            cursor: pointer;
            font-weight: bold;
        }
        .hamburger-menu button:hover {
            background-color: #aa0000;
        }
        .filters {
            margin-bottom: 25px;
            text-align: center;
        }
        .filters select {
            margin: 5px;
            padding: 8px;
            border-radius: 4px;
            border: none;
            background-color: #550000;
            color: white;
        }
        .filters select:focus {
            outline: none;
            box-shadow: 0 0 5px #aa0000;
        }
        .stats {
            margin: 20px auto;
            display: flex;
            justify-content: center;
            gap: 20px;
            flex-wrap: wrap;
        }
        .card {
            padding: 20px;
            border-radius: 8px;
            background-color: #660000;
            box-shadow: 2px 2px 8px rgba(0,0,0,0.4);
            min-width: 150px;
            font-size: 16px;
            font-weight: bold;
        }
        .chart-container {
            width: 90%;
            max-width: 1000px;
            height: 180px;
            margin: 40px auto;
        }
    </style>
</head>
<body>
<div class="container">
<div class="hamburger-container" onclick="toggleMenu()">â˜°</div>
<div id="hamburgerMenu" class="hamburger-menu">
    <button onclick="navigateTo('database.php')">Database</button>
    <button onclick="navigateTo('credentials.php')">Credentials</button>
    <button onclick="navigateTo('index.php')">Coffin Insertion</button>
</div>

<div class="user-box" onclick="$('#logoutMenu').toggle()">
    <img src="images/user_icon.png" alt="User Icon">
    <span class="user-name"><?php echo htmlspecialchars($name); ?></span>
</div>
<div id="logoutMenu" class="logout-menu" onclick="window.location.href='welcome.php'">Logout</div>

<h2>Coffin Analytics Dashboard</h2>

<div class="row mb-3 justify-content-center g-2">
    <div class="col-6 col-md-2">
        <select id="branchFilter" class="form-select">
            <option value="">All Branches</option>
        </select>
    </div>
    <div class="col-6 col-md-2">
        <select id="regionFilter" class="form-select">
            <option value="">All Regions</option>
        </select>
    </div>
    <div class="col-6 col-md-2">
        <select id="yearFilter" class="form-select">
            <option value="">All Years</option>
        </select>
    </div>
    <div class="col-6 col-md-2">
        <select id="monthFilter" class="form-select">
            <option value="">All Months</option>
        </select>
    </div>
    <div class="col-6 col-md-2">
        <select id="dateFilter" class="form-select">
            <option value="">All Dates</option>
        </select>
    </div>
    <div class="col-6 col-md-2">
        <select id="storageFilter" class="form-select">
            <option value="">Storage</option>
        </select>
    </div>
</div>


<div class="row justify-content-center mb-4">
    <div class="col-6 col-md-2">
        <div class="card text-center p-3" style="background-color:#660000; color:white;">
            In-stock: <?php echo $counts['In-stock']; ?>
        </div>
    </div>
    <div class="col-6 col-md-2">
        <div class="card text-center p-3" style="background-color:#660000; color:white;">
            Sold: <?php echo $counts['Sold']; ?>
        </div>
    </div>
    <div class="col-6 col-md-2">
        <div class="card text-center p-3" style="background-color:#660000; color:white;">
            Transfer: <?php echo $counts['Transfer']; ?>
        </div>
    </div>
    <div class="col-6 col-md-2">
        <div class="card text-center p-3" style="background-color:#660000; color:white;">
            Write-off: <?php echo $counts['Write-off']; ?>
        </div>
    </div>
    <div class="col-6 col-md-2">
        <div class="card text-center p-3" style="background-color:#660000; color:white;">
            Total: <?php echo $counts['Total']; ?>
        </div>
    </div>
</div>


<div class="chart-container" style="position: relative; width: 100%; max-width: 1000px; height: 300px; margin: auto;">
    <canvas id="statusChart"></canvas>
</div>


<script>
let rawData = <?php echo json_encode($allCoffins); ?>;

function toggleMenu() {
    const menu = document.getElementById("hamburgerMenu");
    menu.style.display = (menu.style.display === "flex") ? "none" : "flex";
}

function navigateTo(page) {
    const role = "<?php echo $role; ?>";
    if (role === "Admin" || page === "index.php") {
        window.location.href = page;
    } else {
        alert("Access Denied: Admins only!");
    }
}

function populateFilters(data) {
    const branches = [...new Set(data.map(row => row.branch))].filter(b => b).sort();
    const regions = [...new Set(data.map(row => row.region))].filter(r => r).sort();
    const dates = [...new Set(data.map(row => row.arrival_date))].filter(d => d).sort();
    const years = [...new Set(dates.map(d => d.split('-')[0]))].filter(y => y).sort();
    const months = [...new Set(dates.map(d => d.split('-')[1]))].filter(m => m).sort();
    const storages = [...new Set(data.map(row => row.storage))].filter(s => s).sort();

    branches.forEach(b => $('#branchFilter').append(`<option>${b}</option>`));
    regions.forEach(r => $('#regionFilter').append(`<option>${r}</option>`));
    years.forEach(y => $('#yearFilter').append(`<option>${y}</option>`));
    months.forEach(m => $('#monthFilter').append(`<option>${m}</option>`));
    dates.forEach(d => $('#dateFilter').append(`<option>${d}</option>`));
    storages.forEach(s => $('#storageFilter').append(`<option>${s}</option>`));
}

function applyFilters() {
    const branch = $('#branchFilter').val();
    const region = $('#regionFilter').val();
    const year = $('#yearFilter').val();
    const month = $('#monthFilter').val();
    const date = $('#dateFilter').val();
    const storage = $('#storageFilter').val();

    return rawData.filter(row => {
        return (!branch || row.branch === branch) &&
               (!region || row.region === region) &&
               (!year || row.arrival_date.startsWith(year)) &&
               (!month || row.arrival_date.split('-')[1] === month) &&
               (!date || row.arrival_date === date) &&
               (!storage || row.storage === storage);
    });
}

function updateStats(filteredData) {
    const statusCount = {
        'In-stock': 0,
        'Sold': 0,
        'Transfer': 0,
        'Write-off': 0
    };

    filteredData.forEach(row => {
        const status = (row.status || "").trim();
        if (statusCount.hasOwnProperty(status)) {
            statusCount[status]++;
        }
        if (row.transfer_location && row.transfer_location.trim() !== '') {
            statusCount['Transfer']++;
        }
    });

    const total = Object.values(statusCount).reduce((a, b) => a + b, 0);

    $('#inStock').text(`In-stock: ${statusCount['In-stock']}`);
    $('#sold').text(`Sold: ${statusCount['Sold']}`);
    $('#transfer').text(`Transfer: ${statusCount['Transfer']}`);
    $('#writeoff').text(`Write-off: ${statusCount['Write-off']}`);
    $('#total').text(`Total Coffins: ${total}`);
}

let chart;

function drawChart(data) {
    const ctx = document.getElementById('statusChart').getContext('2d');
    if (chart) chart.destroy();

    // Filter to sold coffins only
    const soldOnly = data.filter(row => row.status && row.status.trim() === 'Sold');

    // Build summary by coffin_type
    const summary = {};
    soldOnly.forEach(row => {
        const type = row.coffin_type?.trim();
        const branch = row.branch?.trim();
        if (!type || !branch) return;

        if (!summary[type]) summary[type] = { total: 0, branches: {} };

        summary[type].total++;
        summary[type].branches[branch] = (summary[type].branches[branch] || 0) + 1;
    });

    // Sort by total sold
    const sorted = Object.entries(summary).sort((a, b) => b[1].total - a[1].total);
    const labels = sorted.map(([name]) => name);
    const values = sorted.map(([_, info]) => info.total);

    chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Total Sold',
                data: values,
                backgroundColor: '#cc0000',
                borderRadius: 6,
                barThickness: 50
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: false },
                title: {
                    display: true,
                    text: 'Sales Analysis',
                    color: '#fff',
                    font: { size: 24, weight: 'bold' }
                },
                tooltip: {
                    titleFont: { size: 15, weight: 'bold' },
                    bodyFont: { size: 13 },
                    callbacks: {
                        label: function(context) {
                            const coffinName = context.label;
                            const info = summary[coffinName];
                            const perBranch = Object.entries(info.branches)
                                .map(([branch, count]) => `${branch}: ${count}`)
                                .join(', ');
                            return `Sold: ${info.total} â†’ ${perBranch}`;
                        }
                    }
                }
            },
            scales: {
                x: {
                    ticks: {
                        color: 'white',
                        font: { size: 14, weight: 'bold' }
                    },
                    grid: { color: '#440000' }
                },
                y: {
                    beginAtZero: true,
                    ticks: {
                        color: 'white',
                        font: { size: 14, weight: 'bold' },
                        stepSize: 1
                    },
                    grid: { color: '#440000' }
                }
            },
            animation: {
                duration: 700,
                easing: 'easeOutQuart'
            }
        }
    });
}

function updateDashboard() {
    const filtered = applyFilters();
    updateStats(filtered);
    drawChart(filtered);
}

$('.filters select').on('change', updateDashboard);
$(document).ready(function () {
    populateFilters(rawData);
    updateDashboard();
});
</script>
</div>
<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

</body>
</html>














// code that blocks page from being accessed by Staff
<?php
// Staff users blocked from viewing this page
session_start();
if (!isset($_SESSION['role']) || $_SESSION['role'] !== 'admin') {
    echo "<script>
        alert('Access denied: Admins only!');
        window.location.href = 'index.php';
    </script>";
    exit();
}